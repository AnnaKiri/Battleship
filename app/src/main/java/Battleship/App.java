/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package Battleship;

import java.util.Random;
import java.util.Scanner;

public class App {
	public static void main(String[] args) {
		Scanner scan = new Scanner(System.in);
		
		System.out.println("–ù–∞—á–Ω–µ–º —Ä–∞—Å—Å—Ç–∞–≤–ª—è—Ç—å –∫–æ—Ä–∞–±–ª–∏ –Ω–∞ –ø–æ–ª–µ Player1. –î—Ä—É–≥–æ–π –∏–≥—Ä–æ–∫, –Ω–µ —Å–º–æ—Ç—Ä–∏!");
		String [][] player1FieldForGame = PlayingFieldInput.playingField(scan);
		scan.nextLine();
		HelpFunctions.clearScreen();
		
		System.out.println("–ù–∞—á–Ω–µ–º —Ä–∞—Å—Å—Ç–∞–≤–ª—è—Ç—å –∫–æ—Ä–∞–±–ª–∏ –Ω–∞ –ø–æ–ª–µ Player2. –î—Ä—É–≥–æ–π –∏–≥—Ä–æ–∫, –Ω–µ —Å–º–æ—Ç—Ä–∏!");
		String [][] player2FieldForGame = PlayingFieldInput.playingField(scan);
		scan.nextLine();
		HelpFunctions.clearScreen();
		
		Random rand = new Random();
		int currentPlayer = (int) (rand.nextInt(2)+1);  // —Ü–µ–ª—ã–µ —á–∏—Å–ª–∞ 1 –∏ 2
		if (currentPlayer == 1) {
			System.out.println("–ù–∞—á–∏–Ω–∞–µ—Ç –∏–≥—Ä–æ–∫1");
		} else {
			System.out.println("–ù–∞—á–∏–Ω–∞–µ—Ç –∏–≥—Ä–æ–∫2");
		}
		
		String [][] player1FieldForChe—Åk = new String[10][10]; // –ø–æ–ª–µ –ø–µ—Ä–≤–æ–≥–æ –∏–≥—Ä–æ–∫–∞ –¥–ª—è –≤—Ç–æ—Ä–æ–≥–æ –∏–≥—Ä–æ–∫–∞
		for(int i = 0; i<player1FieldForChe—Åk.length; i++) {
			for(int j = 0; j<player1FieldForChe—Åk[i].length; j++) {
				player1FieldForChe—Åk[i][j] = "üü¶";
			}
		}
		String [][] player2FieldForCheck = new String[10][10]; // –ø–æ–ª–µ –≤—Ç–æ—Ä–æ–≥–æ –∏–≥—Ä–æ–∫–∞ –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ –∏–≥—Ä–æ–∫–∞
		for(int i = 0; i<player2FieldForCheck.length; i++) {
			for(int j = 0; j<player2FieldForCheck[i].length; j++) {
				player2FieldForCheck[i][j] = "üü¶";
			}
		}
				
		while (true) {
			if (currentPlayer == 1) {
				System.out.println("–•–æ–¥ –∏–≥—Ä–æ–∫–∞1");
				HelpFunctions.showMap(player2FieldForCheck);
			} else {
				System.out.println("–•–æ–¥ –∏–≥—Ä–æ–∫–∞2");
				HelpFunctions.showMap(player1FieldForChe—Åk);
			}
			
			System.out.println("–í–≤–µ–¥–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã —É–¥–∞—Ä–∞ (—Ñ–æ—Ä–º–∞—Ç: x,y)");
			String hit = scan.nextLine();
			HelpFunctions.clearScreen();
			String[] temp5 = {hit};
			if (!HelpFunctions.coordinateValidation(temp5)) {
				continue;
			}
			
			String[] temp1 = hit.split(",");
			int x = Integer.parseInt(temp1[0]);
			int y = Integer.parseInt(temp1[1]);
			
			
			if (currentPlayer == 1) {
				currentPlayer = HelpFunctions.hit(player2FieldForGame, player2FieldForCheck, currentPlayer, x, y);
			} else {
				currentPlayer = HelpFunctions.hit(player1FieldForGame, player1FieldForChe—Åk, currentPlayer, x, y);
			}
			
			scan.nextLine();
			HelpFunctions.clearScreen();
				
				
			boolean player1win = !HelpFunctions.shipsAvailability(player2FieldForGame);
			if (player1win) {
				System.out.println("–ü–µ—Ä–≤—ã–π –∏–≥—Ä–æ–∫ –ø–æ–±–µ–¥–∏–ª!");
				break;
			}
			
			boolean player2win = !HelpFunctions.shipsAvailability(player1FieldForGame);
			if (player2win) {
				System.out.println("–í—Ç–æ—Ä–æ–π –∏–≥—Ä–æ–∫ –ø–æ–±–µ–¥–∏–ª!");
				break;
			} 
						
		}
		
		
		
	}
}


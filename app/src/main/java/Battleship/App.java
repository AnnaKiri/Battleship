/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package Battleship;

import java.util.Random;
import java.util.Scanner;

public class App {
	public static void main(String[] args) {
		Scanner scan = new Scanner(System.in);
		
		System.out.println("Let's start placing ships on the Player1 field. Another player, don't look!");
		String [][] player1FieldForGame = PlayingFieldInput.playingField(scan);
		scan.nextLine();
		HelpFunctions.clearScreen();
		
		System.out.println("Let's start placing ships on the Player2 field. Another player, don't look!");
		String [][] player2FieldForGame = PlayingFieldInput.playingField(scan);
		scan.nextLine();
		HelpFunctions.clearScreen();
		
		Random rand = new Random();
		int currentPlayer = (int) (rand.nextInt(2)+1);  // integers 1 and 2
		if (currentPlayer == 1) {
			System.out.println("Player1 starts");
		} else {
			System.out.println("Player2 starts");
		}
		
		String [][] player1FieldForChe—Åk = new String[10][10]; // player1 field for player2
		for(int i = 0; i<player1FieldForChe—Åk.length; i++) {
			for(int j = 0; j<player1FieldForChe—Åk[i].length; j++) {
				player1FieldForChe—Åk[i][j] = "üü¶";
			}
		}
		String [][] player2FieldForCheck = new String[10][10]; // player2 field for player1
		for(int i = 0; i<player2FieldForCheck.length; i++) {
			for(int j = 0; j<player2FieldForCheck[i].length; j++) {
				player2FieldForCheck[i][j] = "üü¶";
			}
		}
				
		while (true) {
			if (currentPlayer == 1) {
				System.out.println("Player1 move");
				HelpFunctions.showMap(player2FieldForCheck);
			} else {
				System.out.println("Player2 move");
				HelpFunctions.showMap(player1FieldForChe—Åk);
			}
			
			System.out.println("Enter hit coordinates (format: x,y)");
			String hit = scan.nextLine();
			HelpFunctions.clearScreen();
			String[] temp5 = {hit};
			if (!HelpFunctions.coordinateValidation(temp5)) {
				continue;
			}
			
			String[] temp1 = hit.split(",");
			int x = Integer.parseInt(temp1[0]);
			int y = Integer.parseInt(temp1[1]);
			
			
			if (currentPlayer == 1) {
				currentPlayer = HelpFunctions.hit(player2FieldForGame, player2FieldForCheck, currentPlayer, x, y);
			} else {
				currentPlayer = HelpFunctions.hit(player1FieldForGame, player1FieldForChe—Åk, currentPlayer, x, y);
			}
			
			scan.nextLine();
			HelpFunctions.clearScreen();
				
				
			boolean player1win = !HelpFunctions.shipsAvailability(player2FieldForGame);
			if (player1win) {
				System.out.println("Player1 wins! ü•≥  üéá");
				break;
			}
			
			boolean player2win = !HelpFunctions.shipsAvailability(player1FieldForGame);
			if (player2win) {
				System.out.println("Player2 wins! ü•≥  üéá");
				break;
			} 
						
		}

	}
}

